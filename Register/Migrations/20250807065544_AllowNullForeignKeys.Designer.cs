// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Register.Data;

#nullable disable

namespace Register.Migrations
{
    [DbContext(typeof(RegisterContext))]
    [Migration("20250807065544_AllowNullForeignKeys")]
    partial class AllowNullForeignKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Register.Models.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaId"));

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AreaId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Register.Models.Aspiration", b =>
                {
                    b.Property<int>("AspirationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AspirationId"));

                    b.Property<string>("AspirationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AspirationId");

                    b.ToTable("Aspirations");
                });

            modelBuilder.Entity("Register.Models.HighSchool", b =>
                {
                    b.Property<int>("HighSchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HighSchoolId"));

                    b.Property<string>("HighSchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("HighSchoolId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("HighSchools");
                });

            modelBuilder.Entity("Register.Models.Major", b =>
                {
                    b.Property<int>("MajorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MajorId"));

                    b.Property<string>("MajorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MajorId");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("Register.Models.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinceId"));

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Register.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("AspirationId")
                        .HasColumnType("int");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<int>("HighSchoolId")
                        .HasColumnType("int");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Prioritize")
                        .HasColumnType("bit");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("AreaId");

                    b.HasIndex("AspirationId");

                    b.HasIndex("HighSchoolId");

                    b.HasIndex("MajorId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Register.Models.HighSchool", b =>
                {
                    b.HasOne("Register.Models.Province", "Province")
                        .WithMany("HighSchools")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Register.Models.Student", b =>
                {
                    b.HasOne("Register.Models.Area", "Area")
                        .WithMany("Students")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Register.Models.Aspiration", "Aspiration")
                        .WithMany("Students")
                        .HasForeignKey("AspirationId");

                    b.HasOne("Register.Models.HighSchool", "HighSchool")
                        .WithMany("Students")
                        .HasForeignKey("HighSchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Register.Models.Major", "Major")
                        .WithMany("Students")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Register.Models.Province", "Province")
                        .WithMany("Student")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Aspiration");

                    b.Navigation("HighSchool");

                    b.Navigation("Major");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Register.Models.Area", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Register.Models.Aspiration", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Register.Models.HighSchool", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Register.Models.Major", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Register.Models.Province", b =>
                {
                    b.Navigation("HighSchools");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
